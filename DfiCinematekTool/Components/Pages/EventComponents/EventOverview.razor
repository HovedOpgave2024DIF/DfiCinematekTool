@page "/EventOverview"
@inject IEventService EventService
@inject IFilmStatusService FilmStatusService
@inject ToasterService Toaster
@inject NavigationManager Navigation
@attribute [Authorize(Roles = "Admin, User")]
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<PageTitle>Event oversigt</PageTitle>

@if (!Events.Any()) 
{
	<RadzenStack Gap="1rem" class="rz-m-12">
		<RadzenText class="rz-color-warning" Text="Henter data.." TextStyle="TextStyle.DisplayH6" />
		<RadzenProgressBar ProgressBarStyle="ProgressBarStyle.Warning" Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Style="height: 10px;" />
	</RadzenStack>
}
else 
{
	<RadzenRow class="rz-mb-6 rz-ml-2">
		<RadzenButton Click=@(() => Navigation.NavigateTo("/EventOverview/CreateEvent")) Text="Opret event" Icon="add" Shade="Shade.Light" ButtonStyle="ButtonStyle.Secondary" Size="ButtonSize.Small" />
	</RadzenRow>
	<EventList Events="@Events" DeleteConfirmation="DeleteEvent" OnUpdateFilmStatus="UpdateFilmStatus"/>
}

@code {
	private List<Event> Events { get; set; } = new();

	protected override async Task OnInitializedAsync() 
	{
		Events = await EventService.GetAllEventsAsync();
	}

	private async Task UpdateFilmStatus(FilmStatus filmStatus) 
	{
		try
		{
			var result = await FilmStatusService.UpdateFilmStatusAsync(filmStatus);

			if (result is not null)
			{
				Toaster.OnSuccess(
					"Filmstatus opdateret",
					$"Filmstatus for {result?.Film?.Title} tilhørende event {result?.Event?.Title} er opdateret.",
					6000
				);
			}
		}
		catch (Exception ex)
		{
			Toaster.OnError(
				"Fejl opstået!",
				$"{ex.Message}",
				6000
			);
		}
	}

	private async Task DeleteEvent((bool confirmation, int eventId) result) 
	{
		try
		{
			if (result.confirmation)
			{
				var isDeleted = await EventService.DeleteEventById(result.eventId);

				if (isDeleted)
				{
					Toaster.OnSuccess(
						"Sletning af event gennemført!",
						$"Alt data tilhørende Event med id {result.eventId} er slettet.",
						6000
					);

					Events = Events.Where(ev => ev.Id != result.eventId).ToList();
					StateHasChanged();
				}
				else
				{
					Toaster.OnSuccess(
						"Event ikke slettet!",
						$"Fejl opstod under slettelse af Event med id {result.eventId}. Prøv igen.",
						6000
					);
				}
			}
		}
		catch (Exception ex)
		{
			Toaster.OnError(
				"Fejl opstået!",
				$"{ex.Message}",
				6000
			);
		}
	}
}
